@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}

<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" asp-area="" asp-controller="SetLanguage"
          asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
          method="post" class="form-inline" role="form">
        <div class="btn-group mx-auto">
            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true"
                    aria-expanded="false">
                <i class="fa fa-globe"></i> Language
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuMenu">
                @foreach (var item in cultureItems)
                {
                    <button class="dropdown-item" type="button" value="" onclick="$('#requestCulture_RequestCulture_UICulture_Name').val('@item.Value').change();">@item.Text</button>
                }
                <select name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name"
                        asp-items="cultureItems" class="form-control form-control-sm d-none"></select>
            </div>
        </div>
            

    </form>
</div>
